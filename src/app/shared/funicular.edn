{:api [:api
       {:input-schema [:map [:app/jwt {:optional true}]]
        :interceptors [{:enter #resolve app.backend.domain.interceptors/set-current-user}]}

       [:session
        {:commands {:login {:input-schema :app.input.login
                            :output-schema :any
                            :handler #resolve app.backend.domain.handlers.session/login}
                    :check-jwt {:input-schema :any
                                :output-schema :any
                                :handler #resolve app.backend.domain.handlers.session/check-jwt}}}]

       [:admin
        {:rules #resolve app.backend.domain.rules/is-admin?
         :queries  {:get-current-user {:input-schema :any
                                       :output-schema :app/user
                                       :handler #resolve app.backend.domain.handlers.admin/get-current-user}
                    :get-users {:input-schema :any
                                :output-schema :app/users
                                :handler #resolve app.backend.domain.handlers.admin/get-users}
                    :get-user {:input-schema :app.input.user/one
                               :output-schema :app/user
                               :handler #resolve app.backend.domain.handlers.admin/get-user}}
         :commands {:create-user {:input-schema :app.input.user/create
                                  :output-schema :app/user
                                  :handler #resolve app.backend.domain.handlers.admin/create-user}
                    :update-user {:input-schema :app.input.user/update
                                  :output-schema :app/user
                                  :handler #resolve app.backend.domain.handlers.admin/update-user}
                    :delete-user {:input-schema :app.input.user/one
                                  :output-schema :app/users
                                  :handler #resolve app.backend.domain.handlers.admin/delete-user}}}]
       [:currencies
        {:queries {:get-currency {:input-schema [:map :currencies/id]
                                  :output-schema :app/currency
                                  :handler #resolve app.backend.domain.handlers.currencies/get-currency}
                   :get-currency-on-date {:input-schema :app.input.currency/fetch-by-date
                                          :output-schema :app/currency 
                                          :handler #resolve app.backend.domain.handlers.currencies/get-currency-on-date}
                   :get-unique-currencies {:input-schema :any
                                           :output-schema :app/unique-currencies
                                           :handler #resolve app.backend.domain.handlers.currencies/get-unique-currencies}}
         :commands {:create-currency {:input-schema :app.input.currency/create
                                      :output-schema [:map :currencies/id]
                                      :handler #resolve app.backend.domain.handlers.currencies/create-currency}
                    :fetch-and-store-currency {:input-schema [:map :currencies/currency-name ]
                                               :output-schema :app/currency
                                               :handler #resolve app.backend.domain.handlers.currencies/fetch-and-store-currency}}}]]

 :pipes   {[:api.admin/create-user :api.admin/get-users] #resolve app.backend.domain.pipes/merge-command-response
           [:api.admin/update-user :api.admin/get-users] #resolve app.backend.domain.pipes/merge-command-response
           [:api.admin/delete-user :api.admin/get-users] #resolve app.backend.domain.pipes/merge-command-response}

 :context {:auth :config/auth
           :penkala :config/penkala}}
