{:deps
 {cljc.java-time/cljc.java-time #:mvn{:version "0.1.18"},
  cljfmt/cljfmt                 #:mvn{:version "0.8.0"},
  com.flexiana/framework        {:git/url       "https://github.com/Flexiana/framework",
                                 :sha           "b2d003c5447f6b6dd94e0629f03f2228089a9363",
                                 :deps/manifest :deps,
                                 :exclusions    [funcool/cuerdas yogthos/config]},
  com.fzakaria/slf4j-timbre     #:mvn{:version "0.3.21"},
  com.taoensso/encore           #:mvn{:version "3.21.0"},
  com.taoensso/timbre           #:mvn{:version "5.2.1"},
  com.verybigthings/commons     {:git/url "https://github.com/VeryBigThings/clojure-commons",
                                 :sha     "92adaec7f29f35178f050276e51873676de668f2"},
  com.verybigthings/funicular   {:git/url    "https://github.com/VeryBigThings/funicular",
                                 :sha        "fb4cb3ae49a9246f4489396c047779b73e9c82ba",
                                 :exclusions [io.aviso/pretty com.taoensso/encore cljc.java-time/cljc.java-time]},
  com.verybigthings/penkala     {:git/url "https://github.com/retro/penkala",
                                 :sha     "8f38814dcfe5a23ee2c6fcdd5d2c48ccd6f4f1c7"},
  com.verybigthings/pgerrors    {:git/url "https://github.com/VeryBigThings/pgerrors",
                                 :sha     "b7a95d13cee17ec9a0bcbab3a5107950f7113ea9"},
  com.walmartlabs/dyn-edn       #:mvn{:version "0.2.0"},
  io.aviso/pretty               #:mvn{:version "1.1.1"},
  lambdaisland/regal            #:mvn{:version "0.0.143"},
  medley/medley                 #:mvn{:version "1.4.0"},
  metosin/jsonista              #:mvn{:version "0.3.5"},
  metosin/malli                 #:mvn{:version "0.8.4"},
  metosin/muuntaja              #:mvn{:version "0.6.8"},
  metosin/reitit                #:mvn{:version "0.5.17"},
  migratus/migratus             #:mvn{:version "1.3.6"},
  org.clojure/clojure           #:mvn{:version "1.11.1"},
  org.clojure/core.async        #:mvn{:version "1.5.648"},
  org.clojure/core.match        #:mvn{:version "1.0.0"},
  org.clojure/spec.alpha        #:mvn{:version "0.3.218"},
  org.clojure/tools.namespace   #:mvn{:version "1.2.0"},
  org.slf4j/slf4j-api           #:mvn{:version "1.7.36"}}

 :aliases
 {:cljfmt           {:commands   "clj -X:dev:cljfmt :cmd :check;
                                  clj -X:dev:cljfmt :cmd :fix;
                                  clj -X:dev:cljfmt :cmd :check :paths '[\"src/frontend/app/ui/main.cljs\"]'"
                     :extra-deps {cljfmt/cljfmt {:mvn/version "0.8.0"}}
                     :exec-fn    [user/cljfmt]}

  :namespace-checker {:command "clj  -Mnamespace-checker src dev test
                                clj  -Mnamespace-checker --replace src dev test"
                      :extra-deps {nsorg-cli/nsorg-cli {:mvn/version "0.3.1"}}
                      :main-opts  ["-m" "nsorg.cli"]}

  :lint             {:command    "clj -M:lint"
                     :extra-deps {clj-kondo/clj-kondo {:mvn/version "2022.02.09"},
                                  clj-kondo/config    {:git/url "https://github.com/clj-kondo/config"
                                                       :sha     "e2e156c53c6c228fee7242629b41013f3e55051d"}}
                     :main-opts  ["-m" "clj-kondo.main"
                                  "--lint" "src" "test" "dev"]}

  :frontend         {:extra-deps
                     {applied-science/js-interop #:mvn{:version "0.3.3"},
                      com.cognitect/transit-cljs #:mvn{:version "0.8.269"},
                      hodgepodge/hodgepodge      #:mvn{:version "0.1.3"},
                      keechma.next/toolbox       {:git/url "https://github.com/keechma/keechma-next-toolbox.git",
                                                  :sha     "bdeebce5f1b296fc971035b49f859dfaaa28883b"},
                      lambdaisland/fetch         #:mvn{:version "1.0.41"},
                      lilactown/helix            #:mvn{:version "0.1.5"}}}

  :dev              {:command     "clj -A:dev:frontend"
                     :extra-paths ["dev" "config/dev"]
                     :extra-deps  {binaryage/devtools        #:mvn{:version "1.0.3"},
                                   hawk/hawk                 #:mvn{:version "0.2.11"},
                                   nrepl/nrepl               #:mvn{:version "0.9.0"},
                                   thheller/shadow-cljs      #:mvn{:version "2.18.0"},
                                   vlaaad/reveal             #:mvn{:version "1.3.273"}}}

  :start-app        {:command "clj -X:dev:frontend:start-app"
                     :exec-fn [user/start-dev]}

  :migrator         {:commands  "clj -X:dev:migrator;
                                 clj -X:test:migrator;
                                 clj -X:dev:migrator :args '[\"reset\"]'
                                 clj -X:test:migrator :args '[\"rollback\"]'
                                 clj -X:test:migrator :args '[\"create\" \"name\" \"type\"]'
                                 clj -X:test:migrator :args '[\"up\" id1 id2 id3 ...]'"
                     :exec-fn   [app.db/migrator]
                     :exec-args {:args ["migrate"]}}

  :seeder           {:commands  "clj -X:dev:seeder;
                                clj -X:test:seeder;
                                clj -X:dev:seeder :args '[\"reset\"]'
                                clj -X:test:seeder :args '[\"destroy\"]'
                                clj -X:test:seeder :args '[\"create\" \"name\" \"type\"]'"
                     :exec-fn   [app.db/seeder]
                     :exec-args {:args ["migrate"]}}

  :test             {:command     "clj -X:test"
                     :extra-paths ["config/test" "test"]
                     :extra-deps  {lambdaisland/kaocha        #:mvn{:version "1.63.998"},
                                   nubank/matcher-combinators #:mvn{:version "3.4.0"},
                                   nubank/state-flow          {:mvn/version "5.14.1", :exclusions [nubank/matcher-combinators]},
                                   org.clojure/test.check     #:mvn{:version "1.1.1"}}
                     :exec-fn     kaocha.runner/exec-fn
                     :exec-args   {:config-file ["tests.edn"]}}

  :release-frontend {:command   "clj -X:dev:frontend:release-frontend"
                     :exec-fn   [user/release-frontend]
                     :exec-args {:build :app}}

  :prod             {:extra-paths ["config/prod"]}

  :build-uberjar    {:commands   "clj -T:build-uberjar uber; java -jar xiana-1.2.124-standalone.jar"
                     :extra-paths ["script"]
                     :deps       {io.github.clojure/tools.build {:git/tag "v0.8.1" :git/sha "7d40500"}}
                     :ns-default build-uberjar}}

 :paths ["src/backend" "src/frontend" "src/shared" "config" "resources"]}
