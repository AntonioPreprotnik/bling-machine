name: "Test and deploy"

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      PG_DB_NAME: postgres
      PG_HOST: localhost
      PG_PASSWORD: postgres
      PG_PORT: 5432
      PG_USER: postgres
      PG_TEST_DB_NAME: postgres
      WS_PORT: 3000
      WS_TEST_PORT: 3000

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: '17.3.0'

      - uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.4
        with:
          cli: 1.11.1.1105

      - name: Check format
        run: make format-check

      - name: Check linter
        run: make lint

      - name: Check tests
        run: make test

      - name: Check migration reversibility
        run: make check-migrations

      - name: Check seeds
        run: make check-seeds

      - name: Check app build
        run: make release-app
  build:
    needs: test
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: pasta-xiana-main
      JAR_NAME: xiana-1.2.149-standalone.jar
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "8.0.292"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.4
        with:
          # Install just one or all simultaneously
          cli: 1.11.1.1105 # Clojure CLI based on tools.deps

      - name: Maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Gitlibs cache
        uses: actions/cache@v2
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-
      - name: npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('deps.edn') }}-${{ hashFiles('package.json') }}-${{ hashFiles('**/deps.cljs') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: shadow-cljs compiler cache
        uses: actions/cache@v2
        with:
          path: .shadow-cljs
          key: ${{ runner.os }}-shadow-cljs-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-shadow-cljs-
      - name: Install NPM Packages
        shell: bash
        run: npm install

      - name: Install Heroku CLI Java plugin
        shell: bash
        run: heroku plugins:install java

      - name: Build release
        run: make release

      - name: Deploy
        shell: bash
        run: heroku deploy:jar target/${JAR_NAME} --app ${HEROKU_APP_NAME}
